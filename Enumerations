import Foundation

func printXY(x:Double,y:Double) {
    print("(\(x), \(y))")
}

//CGPoint - core graphics point

func printXY(point:CGPoint) {
    let x = point.x
    let y = point.y
    
    print("(\(x), \(y))")
}

enum Direction {
    case north, south, east, west
}

var x = 0.0
var y = 0.0
let delta = 5.0
var direction1 = Direction.east
var direction2 : Direction = .north // we can directly write .north here because we have already told that it it type of Direction
var directions:[Direction] = [.east, .west, .north, .south]

printXY(x: x, y: y)

switch(direction1) {
case .east:
    x += delta
case .west:
    x -= delta
case .north:
    y -= delta
case .south:
    y += delta
}

printXY(x: x, y: y)

print("Function with CGPoint and enumerations")
func updatePosition(direction:Direction,point:CGPoint) -> CGPoint {
    var x = point.x
    var y = point.y
    let delta = 5.0
    
    switch(direction) {
    case .east:
        x += delta
    case .west:
        x -= delta
    case .north:
        y -= delta
    case .south:
        y += delta
    }
    
    return CGPoint(x: x, y: y)
    
}

var cgPoint:CGPoint = CGPoint(x: 0.0, y: 0.0)

for dir in directions {
    cgPoint = updatePosition(direction:dir,point:CGPoint(x: x, y: y))
    printXY(x: cgPoint.x, y: cgPoint.y)
}


// Named cases. Raw values

enum fileNames: String, CaseIterable { // using CaseIterable we can get allValues for looping
    case file1 = "download_file_1"
    case file2 = "download_file_2"
    case file3 = "download_file_3"
}
print("The filename for \(fileNames.file1) is \(fileNames.file1.rawValue).")

print("=====Raw Values for enum using loop=====")
// using CaseIterable in enums we can get allValues for looping
for file in fileNames.allCases {
    print("The filename for \(file) is \(file.rawValue).")
}
