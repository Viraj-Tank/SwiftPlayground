import Foundation

print("Let's talk about primitive data types!")

var a: Int = 6
print(a)
a+=1
print(a)

var b = 100
var c = 100.0

//type of -> it gives the data type of given variable
print("Type of variable b is \(type(of: b))")
print("Type of variable c is \(type(of: c))")

var d: Float = 100.0

print("Type of variable d is \(type(of: d))")

print("Largest available integer number is \(Int.max) & smallest is \(Int.min)")
print("Largest available Double number is \(Double.greatestFiniteMagnitude) & smallest is \(Double.greatestFiniteMagnitude)")
print("Largest available Float number is \(Float.greatestFiniteMagnitude) & smallest is \(Float.greatestFiniteMagnitude)")

print("\n=====DIVISION=====")
print(7/2)
print(7.0/2)
print(7/2.0)
print(7/Double(2)) //type cast


// Euclid's Division Lemma = a = bq + r

let x = 126
let quotient = x / 6
let remainder = x % 6

// print("\(x) = 6 * \(quotient) + \(remainder)")

for divisor in 1..<10 {
    print(
        divisionAlgorithm(x:112,divisor:divisor)
    )
}

func divisionAlgorithm(x: Int, divisor: Int ) -> String {
    let result:String
    let remainder = x % divisor
    let quotient = x / divisor
    if(remainder == 0) {
        result = "\(x) = \(divisor) * \(quotient)"
    } else {
        result = "\(x) = \(divisor) * \(quotient) + \(remainder)"
    }
    return result
}


